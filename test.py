import RPi.GPIO as GPIO
import time

class ServoMecatronicos:
    def __init__(self, pin=3):
        """
        –ê–Ω–∞–ª–æ–≥ Arduino Servo –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
        pin - GPIO –ø–∏–Ω –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–µ—Ä–≤–æ
        """
        # –ü–µ—Ä–µ–≤–æ–¥–∏–º Arduino –ø–∏–Ω –≤ GPIO (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
        # Arduino pin 3 –æ–±—ã—á–Ω–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç GPIO 17 –Ω–∞ Raspberry Pi
        if pin == 3:
            self.gpio_pin = 17  # –∏–ª–∏ –¥—Ä—É–≥–æ–π GPIO –ø–æ –≤–∞—à–µ–º—É –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é
        else:
            self.gpio_pin = pin
            
        print(f"ü§ñ Servo –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ GPIO {self.gpio_pin}")
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ GPIO
        GPIO.setmode(GPIO.BCM)
        GPIO.setup(self.gpio_pin, GPIO.OUT)
        
        # PWM —Å —á–∞—Å—Ç–æ—Ç–æ–π 50Hz (—Å—Ç–∞–Ω–¥–∞—Ä—Ç –¥–ª—è —Å–µ—Ä–≤–æ)
        self.pwm = GPIO.PWM(self.gpio_pin, 50)
        self.pwm.start(0)
        
    def attach(self, pin):
        """
        –ê–Ω–∞–ª–æ–≥ servomecatronicos.attach(pin)
        –£–∂–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ –≤ __init__
        """
        print(f"üìå Servo attached to pin {pin}")
        
    def write(self, angle):
        """
        –ê–Ω–∞–ª–æ–≥ servomecatronicos.write(angle)
        –ü–æ–≤–æ—Ä–æ—Ç —Å–µ—Ä–≤–æ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π —É–≥–æ–ª (0-180¬∞)
        """
        # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —É–≥–æ–ª
        angle = max(0, min(180, angle))
        
        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —É–≥–æ–ª –≤ duty cycle
        # 0¬∞ = 2.5%, 90¬∞ = 7.5%, 180¬∞ = 12.5%
        duty_cycle = 2.5 + (angle / 180.0) * 10.0
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–∑–∏—Ü–∏—é
        self.pwm.ChangeDutyCycle(duty_cycle)
        
        print(f"üéØ Servo position: {angle}¬∞")
        
    def cleanup(self):
        """
        –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤
        """
        self.pwm.stop()
        GPIO.cleanup()
        print("‚úÖ Servo cleanup completed")

# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç —Å–µ—Ä–≤–æ (–∞–Ω–∞–ª–æ–≥ Servo servomecatronicos;)
servomecatronicos = ServoMecatronicos()

def setup():
    """
    –ê–Ω–∞–ª–æ–≥ void setup() –≤ Arduino
    """
    print("üöÄ Setup started...")
    servomecatronicos.attach(3)  # –ü–æ–¥–∫–ª—é—á–∞–µ–º –∫ –ø–∏–Ω—É 3 (GPIO 17)
    print("‚úÖ Setup completed!")

def loop():
    """
    –ê–Ω–∞–ª–æ–≥ void loop() –≤ Arduino
    –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –æ–¥–∏–Ω —Ä–∞–∑ (–Ω–µ –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª)
    """
    print("üîÑ Loop started...")
    
    # delay(2000);
    print("‚è±Ô∏è  Delay 2 seconds...")
    time.sleep(2)
    
    # servomecatronicos.write(90);
    servomecatronicos.write(90)
    
    # delay(2000);
    print("‚è±Ô∏è  Delay 2 seconds...")
    time.sleep(2)
    
    # servomecatronicos.write(180);
    servomecatronicos.write(180)
    
    # delay(2000);
    print("‚è±Ô∏è  Delay 2 seconds...")
    time.sleep(2)
    
    # servomecatronicos.write(0);
    servomecatronicos.write(0)
    
    print("‚úÖ Loop completed!")

def main():
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è - –∑–∞–ø—É—Å–∫–∞–µ—Ç setup() –∏ loop()
    """
    try:
        # –í—ã–ø–æ–ª–Ω—è–µ–º setup (–∫–∞–∫ –≤ Arduino)
        setup()
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º loop –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ (–∏–ª–∏ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ)
        print("\n" + "="*50)
        print("üéÆ –ó–∞–ø—É—Å–∫ Arduino-—Å—Ç–∏–ª—å –ø—Ä–æ–≥—Ä–∞–º–º—ã...")
        print("="*50)
        
        # –í–∞—Ä–∏–∞–Ω—Ç 1: –û–¥–∏–Ω —Ü–∏–∫–ª (–∫–∞–∫ –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª–µ)
        loop()
        
        # –í–∞—Ä–∏–∞–Ω—Ç 2: –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª (—Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
        # while True:
        #     loop()
        #     time.sleep(1)  # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É —Ü–∏–∫–ª–∞–º–∏
        
    except KeyboardInterrupt:
        print("\n‚ö†Ô∏è  –ü—Ä–æ–≥—Ä–∞–º–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    
    finally:
        servomecatronicos.cleanup()

# –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–º —Ü–∏–∫–ª–æ–º
def main_infinite():
    """
    –í–µ—Ä—Å–∏—è —Å –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–º —Ü–∏–∫–ª–æ–º (–∫–∞–∫ –Ω–∞—Å—Ç–æ—è—â–∏–π Arduino)
    """
    try:
        setup()
        
        print("\nüîÑ –ó–∞–ø—É—Å–∫ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ (Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏)...")
        
        while True:
            loop()
            time.sleep(0.1)  # –ö–æ—Ä–æ—Ç–∫–∞—è –ø–∞—É–∑–∞
            
    except KeyboardInterrupt:
        print("\n‚ö†Ô∏è  –ü—Ä–æ–≥—Ä–∞–º–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
    finally:
        servomecatronicos.cleanup()

# –ü—Ä—è–º–æ–π –ø–µ—Ä–µ–≤–æ–¥ –≤ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–º —Å—Ç–∏–ª–µ
def arduino_style_direct():
    """
    –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —Ç–æ—á–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥ Arduino –∫–æ–¥–∞
    """
    # –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è (–∫–∞–∫ –≤ Arduino)
    global servomecatronicos
    
    try:
        print("üéØ –ü—Ä—è–º–æ–π –ø–µ—Ä–µ–≤–æ–¥ Arduino –∫–æ–¥–∞:")
        
        # setup()
        servomecatronicos.attach(3)
        
        # loop() - –æ–¥–∏–Ω —Ä–∞–∑
        time.sleep(2)                    # delay(2000);
        servomecatronicos.write(90)      # servomecatronicos.write(90);
        time.sleep(2)                    # delay(2000);
        servomecatronicos.write(180)     # servomecatronicos.write(180);
        time.sleep(2)                    # delay(2000);
        servomecatronicos.write(0)       # servomecatronicos.write(0);
        
        print("‚úÖ –ü–µ—Ä–µ–≤–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    finally:
        servomecatronicos.cleanup()

if __name__ == "__main__":
    print("ü§ñ –ü–ï–†–ï–í–û–î ARDUINO –ö–û–î–ê –ù–ê PYTHON")
    print("="*50)
    
    choice = input("""
–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –∑–∞–ø—É—Å–∫–∞:
1 - –û–¥–∏–Ω —Ü–∏–∫–ª (–∫–∞–∫ –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª–µ)
2 - –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª (–Ω–∞—Å—Ç–æ—è—â–∏–π Arduino —Å—Ç–∏–ª—å)
3 - –ü—Ä—è–º–æ–π –ø–µ—Ä–µ–≤–æ–¥ –∫–æ–¥–∞

–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-3): """)
    
    if choice == "1":
        main()
    elif choice == "2":
        main_infinite()
    elif choice == "3":
        arduino_style_direct()
    else:
        print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä, –∑–∞–ø—É—Å–∫–∞—é –≤–∞—Ä–∏–∞–Ω—Ç 1")
        main()

# –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫
def quick_arduino_test():
    """–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç Arduino –∫–æ–¥–∞"""
    servo = ServoMecatronicos(pin=17)  # –ò—Å–ø–æ–ª—å–∑—É–µ–º GPIO 17
    try:
        servo.attach(3)
        
        # –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏–∑ Arduino
        positions = [90, 180, 0]
        for pos in positions:
            time.sleep(2)
            servo.write(pos)
            
    finally:
        servo.cleanup()

# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
# quick_arduino_test()  # –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç